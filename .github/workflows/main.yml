name: tko-class

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
env:
  SYSDIG_URL: https://us2.app.sysdig.com/
  APP_NAME: app-js
  REGISTRY: ghcr.io/gaurang-shirodkar/tko-class

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Get the version (or use any other method)
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    
    - name: Test
      run: echo "something else"
    
    - name: Docker metadata tag set (or use some another method)
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.APP_NAME }}
        tags: |
          type=raw,priority=100,enable=${{ github.event_name == 'push' }},value=${{ steps.get_version.outputs.VERSION }}
        labels: |
          org.opencontainers.image.title=${{ env.APP_NAME }}

    - name: Get the Current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Build and push Docker images
      uses: docker/build-push-action@v3.1.1
      with:
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        context: .
        push: false
    
    - name: Scan Image New
      env:
        SECURE_API_TOKEN: ${{ secrets.SYSDIG_SECURE_TOKEN }}
      run: |
        curl -LO "https://download.sysdig.com/scanning/bin/sysdig-cli-scanner/$(curl -L -s https://download.sysdig.com/scanning/sysdig-cli-scanner/latest_version.txt)/linux/amd64/sysdig-cli-scanner"
        chmod +x ./sysdig-cli-scanner
        ./sysdig-cli-scanner --apiurl ${{ env.SYSDIG_URL }} ${{ env.REGISTRY }}/${{ steps.meta.outputs.images }}${{ steps.meta.outputs.tags }} --output-json=/tmp/${{ env.APP_NAME }}.json
      
    # - name: Build Docker Image 
    #   run: docker build . --file Dockerfile --tag my-image-name:${{ steps.get_version.outputs.VERSION }}
      
    
